Day 6 Assignment: Data Structures and Algorithms - Arrays

=== BEGINNER LEVEL ===

Q1. Linear Search
Write a function to search for an element in an array and return its index. Return -1 if not found.

Q2. Array Rotation
Write a function to rotate an array to the left by one position.
Example: [1,2,3,4,5] becomes [2,3,4,5,1]

Q3. Find Maximum Element
Write a function to find the maximum element in an array.

Q4. Count Occurrences
Write a function to count how many times a specific element appears in an array.

Q5. Reverse Array
Write a function to reverse an array in-place.

Q6. Sum of Array Elements
Write a function to calculate the sum of all elements in an array.

Q7. Check if Array is Sorted
Write a function to check if an array is sorted in ascending order.

=== INTERMEDIATE LEVEL ===

Q8. Two Sum Problem
Given an array of integers and a target sum, find two numbers that add up to the target. Return their indices.

Q9. Remove Duplicates
Write a function to remove duplicates from a sorted array in-place and return the new length.

Q10. Maximum Subarray Sum (Kadane's Algorithm)
Find the contiguous subarray with the largest sum and return the sum.

Q11. Binary Search
Implement binary search algorithm to find an element in a sorted array.

Q12. Move Zeros to End
Move all zeros in an array to the end while maintaining the order of non-zero elements.

Q13. Find Missing Number
Given an array containing n distinct numbers from 0 to n, find the missing number.

Q14. Intersection of Two Arrays
Find the intersection of two arrays (common elements).

=== ADVANCED LEVEL ===

Q15. Merge Two Sorted Arrays
Given two sorted arrays, merge them into one sorted array without using extra space.

Q16. Trapping Rain Water
Given an array representing heights of bars, calculate how much water can be trapped after raining.
Example: [0,1,0,2,1,0,1,3,2,1,2,1] can trap 6 units of water.

Q17. Maximum Product Subarray
Find the contiguous subarray with the largest product.

Q18. Rotate Array by K Positions
Rotate an array to the right by k steps efficiently.

Q19. Find Peak Element
Find a peak element in an array where arr[i] >= arr[i-1] and arr[i] >= arr[i+1].

Q20. Longest Consecutive Sequence
Find the length of the longest consecutive elements sequence in an unsorted array.

Q21. Container With Most Water
Given heights array, find two lines that together with x-axis forms a container that holds the most water.

=== SUBMISSION GUIDELINES ===
- Implement efficient algorithms
- Consider time and space complexity
- Test with edge cases (empty arrays, single elements)
- Use meaningful variable names
- Add comments for complex logic